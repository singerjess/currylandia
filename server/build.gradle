plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.currylandia'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

configurations {
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter"
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.postgresql:postgresql'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.springframework.boot:spring-boot-starter-test"

	integrationTestImplementation 'io.rest-assured:rest-assured:4.2.0'
	integrationTestImplementation 'io.rest-assured:rest-assured-all:4.2.0'
	def testContainersVersion = '1.15.3'
	integrationTestImplementation "org.testcontainers:testcontainers:$testContainersVersion"
	integrationTestImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
	integrationTestImplementation "org.testcontainers:postgresql:$testContainersVersion"
}

task integrationTest(type: Test) {
	description = 'Runs integration tests.'
	group = 'verification'

	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
	shouldRunAfter test
}

check.dependsOn integrationTest


test {
	useJUnitPlatform()
}

integrationTest {
	useJUnitPlatform()
}
